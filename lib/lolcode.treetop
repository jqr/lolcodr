grammar LOLCode
  rule program
    start more_expressions:(expression)* {
      def run
        value = nil
        more_expressions.elements.each do |expression|
          value = expression.value
        end
        value
      end
      
      def variables
        Environment
      end
    }
  end
  
  rule start
    'HAI' os nl
  end
  
  rule expression
    os real_expression os nl {
      def value
        real_expression.value
      end
    }
  end
  
  rule real_expression
    exit / string / number
  end
  
  rule exit
    'KTHXBYE' { def value; exit; end }
  end
  
  rule string
    '"' literal:(!["] .)* '"' { def value; literal.text_value; end }
  end
  
  rule number
    float / integer
  end

  rule float
    os ([1-9] [0-9]* '.' [0-9]+) os	{ def value; text_value.to_f; end }
  end
  
  rule integer
    os ([1-9] [0-9]* / '0') os	{ def value; text_value.to_i; end }
  end

  rule s
    [ \t]+
  end
  
  rule os
    s*
  end

  rule ns
    ![ \t] .
  end
  
  rule nl
    [\n]
  end
end
